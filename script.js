console.log("KOMODO CACULATOR DEMO");
//  setInterval(() => {
// }, interval);  bao gio hoc bat dong bo ok se quay lai ap dung
// h chi biet dung moi settimeout
// setInterval() l√† g√¨?
// H√†m d√πng ƒë·ªÉ l·∫∑p l·∫°i m·ªôt ƒëo·∫°n m√£ sau m·ªói kho·∫£ng th·ªùi gian c·ªë ƒë·ªãnh.
// setInterval(h√†m, th·ªùi_gian);
// üëâ D√πng khi c·∫ßn: ƒë·ªìng h·ªì, xo√° li√™n t·ª•c, c·∫≠p nh·∫≠t tr·∫°ng th√°i... N·∫øu mu·ªën ki·ªÉm so√°t t·ªët h∆°n, d√πng setTimeout() t·ª± g·ªçi l·∫°i.
// L·∫∑p li√™n t·ª•c cho ƒë·∫øn khi b·ªã d·ª´ng b·∫±ng clearInterval().

setTimeout(() => {
  alert("ƒê√¢y l√† b·∫£n demo");
}, 5000);
setTimeout(() => {
  alert("Sau n√†y s·∫Ω n√¢ng c·∫•p th√™m t√≠nh nƒÉng");
}, 8000);

const display = document.getElementById("caculator-display");
const btn = document.querySelectorAll(".caculator-icon");
const power = document.getElementById("power-btn");
const caculatorMain = document.querySelector(".caculator-main");
let data = "";
let countsyntax = 0;
let active = false;
let boot = false;
power.addEventListener("click", () => {
  if (boot) return;
  if (!active) {
    display.value = "Komodo is start...";
    boot = true;
    setTimeout(() => {
      display.value = "Power-On";
    }, 5000);
    setTimeout(() => {
      display.value = "0";
      active = true;
      boot = false;
      caculatorMain.classList.add("active");
    }, 6000);
  } else {
    display.value = "Power Off";
    active = false;
    caculatorMain.classList.remove("active");
    setTimeout(() => {
      display.value = "";
    }, 2000);
  }
});

btn.forEach((element) => {
  element.addEventListener("click", () => {
    if (!active) return;
    data = element.textContent;

    if (data === "x") {
      data = "";
      display.value += "*";
      return;
    }
    if (data === "()") {
      data = "";
      let lastChar = display.value.slice(-1);
      if (display.value.slice(0) === "0") {
        display.value = "(";
        countsyntax++;
        return;
      }
      if (countsyntax > 0 && /[0-9\)]/.test(lastChar)) {
        display.value += ")";
        countsyntax--;
      } else if (display.value === "" || /[0-9\%\)\+\-\*\/]/.test(lastChar)) {
        display.value += "(";
        countsyntax++;
      }
    }

    if (data === "√∑") {
      data = "";
      display.value += "/";
      return;
    }
    if (data === "Del") {
      display.value = display.value.slice(0, -1);
    } else if (data === "AC") {
      display.value = "";
    } else if (data === "=") {
      if (display.value === "") {
      } else {
        try {
          display.value = math.evaluate(display.value);
        } catch {
          display.value = "Error";
          display.classList.add("error");
          setTimeout(() => {
            display.value = "";
            display.classList.remove("error");
          }, 1000);
        }
      }
    } else {
      if (display.value === "0") {
        display.value = data;
      } else {
        display.value += data;
      }
    }
    display.scrollLeft = display.scrollWidth;
    // Giai thich lenh nay
    // Trong DOM, m·∫•y c√°i input hay div c√≥ th·ªÉ cu·ªôn ngang (scroll theo chi·ªÅu X).

    // scrollWidth: l√† chi·ªÅu r·ªông to√†n b·ªô n·ªôi dung b√™n trong (k·ªÉ c·∫£ ph·∫ßn b·ªã tr√†n v√† b·ªã ·∫©n).

    // scrollLeft: l√† v·ªã tr√≠ cu·ªôn hi·ªán t·∫°i t√≠nh t·ª´ m√©p tr√°i. N·∫øu n√≥ b·∫±ng 0 ‚Üí ƒëang ƒë·ª©ng ·ªü ƒë·∫ßu b√™n tr√°i.
  });
});
